# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2.1

executors:
  default:
    docker:
      - image: cimg/base:2022.08
jobs:
  build:
    parameters:
      os:
        type: string
      install-type:
        type: string
    executor: default
    environment:
      COMPOSER_ALLOW_SUPERUSER: 1
      XDMOD_REALMS: 'jobs,storage,cloud'
      TRAVIS_COMMIT_RANGE: << pipeline.git.base_revision >>..<<pipeline.git.revision>>
      XDMOD_IS_CORE: yes
      XDMOD_INSTALL_DIR: /xdmod
      XDMOD_TEST_MODE: << parameters.install-type >>
    steps:
      - checkout
      - setup_remote_docker
      # We need to update our acct before we can enable docker layer caching
      #    docker_layer_caching: true
      - run:
          name: Download and Install Docker
          command: |
            apt update && apt install curl
            curl -L "https://github.com/docker/compose/releases/download/v2.5.0/docker-compose-linux-x86_64" -o ~/docker-compose
            chmod +x ~/docker-compose  
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
            name: check contents
            command: ls -alh /home/circleci/project/
      - run:
          name: Docker Compose corresponding OS file
          command: docker compose -f tests/ci/Docker/bin/<< parameters.os >>.yml up -d
      - run:
          name: Copy Files for Playwright and XDMoD container
          command: |
            docker cp ~/project xdmod:/xdmod
            docker cp ~/project playwright:/xdmod
      - run:
         name: Make sure that procps-ng is installed
         command: docker exec xdmod yum install -y procps-ng
      - run:
          name: Execute Install Script
          command: docker exec xdmod /xdmod/tests/ci/Docker/bin/install.sh
      - run:
          name: Put the updated httpd conf file in place
          command: docker cp ~/project/xdmod.conf xdmod:/etc/httpd/conf.d/xdmod.conf
      - run:
          name: Restart XDMoD's services
          command: docker exec xdmod /root/bin/services restart
      - run:
          name: Run everything but the playwright tests.
          command: docker exec xdmod /xdmod/tests/ci/Docker/bin/test.sh << parameters.os >>
      - run:
          name: Run Playwright Tests
          command: docker exec -w "/xdmod/tests/playwright" playwright /xdmod/tests/playwright/runtests.sh -j << parameters.os >>
      - run:
          name: Copy Test Results into Unit
          command: |
            docker cp xdmod:/root/phpunit ~/phpunit
            docker cp xdmod:/tmp/screenshots /tmp/screenshots
            mkdir ~/project/log
            docker cp xdmod:/var/log/xdmod ~/project/log
            docker cp playwright:/xdmod/tests/playwright/test_results-<< parameters.os >>.xml ~/phpunit
            docker cp playwright:/xdmod/tests/playwright/test-results /tmp/screenshots
      - run:
          name: Run on fail status
          command: |
            docker exec playwright ls
            docker exec playwright ls xdmod
            docker cp playwright:/xdmod/tests/playwright/test-results /tmp/screenshots
          when: on_fail
      - store_artifacts:
          path: /tmp/screenshots
      - store_artifacts:
          path: ~/project/log
      - store_test_results:
          #path: ~/phpunit
          path: results.xml
workflows:
  full-build:
    jobs:
      - build:
          matrix:
            parameters:
              os: ['centos7', 'rocky8']
              install-type: ["fresh_install", "upgrade"]
            exclude:
              - os: 'rocky8'
                install-type: "upgrade"
